package ncku.topology.web;

import ncku.topology.model.PowerGridMetrics;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

@RestController
@RequestMapping("powerflow")
public class PowerFlowController {
  Logger logger = LoggerFactory.getLogger(this.getClass());

  private Workbook workbook; // 保存 Workbook 的屬性

  @Autowired
  PowerGridMetrics powerGridMetrics;

  @PostMapping("anynet/metrics")
  public String uploadExcelFile(MultipartFile file,
                                String metrics,
                                Float alpha,
                                Float beta,
                                String alphaArrStr,
                                Float betaArr) throws IOException {
    // 將 MultipartFile 轉換為臨時文件
    File tempFile = File.createTempFile("temp", null);
    file.transferTo(tempFile);

    // 讀取 Excel 文件
    workbook = WorkbookFactory.create(tempFile);

    Sheet wsBus = workbook.getSheet("bus");
    Sheet wsLine = workbook.getSheet("line");

    int i = 1;
    int max = 0;
    int NPV = 0;

    while (wsBus.getRow(i) != null && wsBus.getRow(i).getCell(0).getCellType() != CellType.BLANK) {
      if (wsBus.getRow(i).getCell(0).getNumericCellValue() > max) {
        max = (int) wsBus.getRow(i).getCell(0).getNumericCellValue();
      }
      if (wsBus.getRow(i).getCell(1).getNumericCellValue() == 2) {
        NPV++;
      }
      i++;
    }

    int NB = max;

    i = 1;
    ArrayList<Integer> src = new ArrayList<>();
    ArrayList<Integer> dst = new ArrayList<>();

    while (wsLine.getRow(i) != null && wsLine.getRow(i).getCell(0).getCellType() != CellType.BLANK) {
      int index1 = (int) wsLine.getRow(i).getCell(0).getNumericCellValue() - 1;
      int index2 = (int) wsLine.getRow(i).getCell(1).getNumericCellValue() - 1;
      // 順方向
      src.add(index1);
      dst.add(index2);
      // 反方向
      src.add(index2);
      dst.add(index1);

      i++;
    }

    return powerGridMetrics.anynet(src, dst, NB, metrics, alpha, beta, alphaArrStr, betaArr);
  }
}
async function anynetPost(url, data) {
  try{
    const res = await fetch(url, {
      method: 'POST',
      body: data
    });
    const results = await res.text();
    // console.log(results);
    clearAnynetResults();
    $("#any-results").append(results);
  } catch (error){
    console.error(error);
  }
}

function anynetCalculate(){
  // 清空結果
  clearAnynetResults();
  $("#any-results").append("計算中…")

  const anynetFile = $("#any-network #network-table").prop("files");
  const metrics = $("#any-network select").val();
  const alpha = $("#cascading-param #alpha").val();
  const beta = $("#cascading-param #beta").val();
  const alphaArrStr = $("#multiple-cascading-param #alpha-arr").val();
  const betaArr = 1.0;

  const formData = new FormData();
  formData.append("file", anynetFile[0]);
  formData.append("metrics", metrics);
  formData.append("alpha", alpha);
  formData.append("beta", beta);
  formData.append("alphaArrStr", alphaArrStr);
  formData.append("betaArr", betaArr);

  anynetPost("/power/anynet/metrics", formData);
}

function powerFlowAnynetCalculate(){
  // 清空結果
  clearPowerFlowAnynetResults();
  $("#powerflow-any-results").append("計算中…")

  const anynetFile = $("#powerflow-any-network #power-flow-data").prop("files");
  const metrics = $("#powerflow-any-network select").val();
  const alpha = $("#powerflow-cascading-param #alpha").val();
  const beta = $("#powerflow-cascading-param #beta").val();
  const alphaArrStr = $("#powerflow-multiple-cascading-param #alpha-arr").val();
  const betaArr = 1.0;

  const formData = new FormData();
  formData.append("file", anynetFile[0]);
  formData.append("metrics", metrics);
  formData.append("alpha", alpha);
  formData.append("beta", beta);
  formData.append("alphaArrStr", alphaArrStr);
  formData.append("betaArr", betaArr);

  anynetPost("/powerflow/anynet/metrics", formData);
}

function clearAnynetResults(){
  $("#any-results").empty();
}

function clearPowerFlowAnynetResults(){
  $("#powerflow-any-results").empty();
}

$("#any-network select").on("change", () => {
  const metrics = $("#any-network select").val();
  // if(metrics === "CascadingFailure"){
  //   $("#cascading-param").show("fast");
  // }else{
  //   $("#cascading-param").hide("fast");
  // }

  switch(metrics){
    case "CascadingFailure":
      $("#cascading-param").show("fast");
      $("#multiple-cascading-param").hide("fast");
      break;
    case "MultipleCascadingFailure":
      $("#multiple-cascading-param").show("fast");
      $("#cascading-param").hide("fast");
      break;
    default:
      $("#cascading-param").hide("fast");
      $("#multiple-cascading-param").hide("fast");
      break;

  }
});

/* 長度加權 */
document.querySelector("#any-network-with-length button").onclick = async () => {
  document.getElementById("any-length-results").innerHTML = "計算中…";

  const anynetFile = $("#any-network-with-length #network-table").prop("files");
  const metrics = $("#any-network-with-length select").val();

  const url = "/power/anylength/metrics";
  const formData = new FormData();

  formData.append("file", anynetFile[0]);
  formData.append("metrics", metrics);

  try{
    const res = await fetch(url, {
      method: "POST",
      body: formData
    });
    
    document.getElementById("any-length-results").innerHTML = await res.text();
  } catch (error){
    console.error(error);
  }
}